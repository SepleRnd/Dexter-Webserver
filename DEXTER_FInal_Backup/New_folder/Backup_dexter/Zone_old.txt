<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Zone Device Selector</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f2f5;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 800px;
      margin: auto;
      padding: 20px;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .column {
      padding: 10px;
    }
    h1 {
      text-align: center;
      color: #333;
    }
    .zone {
      margin-bottom: 20px;
      border-bottom: 1px solid #e0e0e0;
      padding-bottom: 15px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .zone:last-child {
      border-bottom: none;
    }
    .zone label {
      margin-bottom: 5px;
      font-weight: bold;
      color: #555;
    }
    .toggle-switch-container {
      display: flex;
      align-items: center;
    }
    .toggle-switch {
      margin-right: 10px;
    }
    .toggle-slider {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 34px;
    }
    .toggle-slider input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    .toggle-slider .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      border-radius: 34px;
      transition: 0.4s;
    }
    .toggle-slider .slider:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      border-radius: 50%;
      transition: 0.4s;
    }
    .toggle-slider input:checked + .slider {
      background-color: #007bff;
    }
    .toggle-slider input:checked + .slider:before {
      transform: translateX(26px);
    }
    .zone select,
    .zone button {
      width: 150px;
      padding: 10px;
      margin-bottom: 10px;
      display: block;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #f9f9f9;
      color: #333;
    }
    .buzzer-switch-container {
      display: flex;
      align-items: center;
      margin-left: 10px; /* Adjusted margin */
    }
    .buzzer-switch {
      margin-top: 10px;
    }
    .buzzer-switch input {
      display: none;
    }
    .buzzer-switch label {
      cursor: pointer;
      padding: 10px;
      background-color: #007bff;
      color: #fff;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }
    .buzzer-switch input:checked + label {
      background-color: #dc3545;
    }
    .buzzer-switch label:hover {
      background-color: #0056b3;
    }
    .buzzer-switch input:disabled + label {
      cursor: not-allowed;
      background-color: #ccc;
    }
    .buzzer-switch label:disabled:hover {
      background-color: #ccc;
    }
  </style>
</head>
<body>

<div class="container">
  <div class="column">
    <h1>Zone Configuration</h1>
    <div id="leftZones"></div>
  </div>
  <div class="column">
    <div id="rightZones"></div>
  </div>
</div>

<script>
  const devices = ['bas', 'fas', 'tl', 'ac'];
  const zones = [];

  function initializeZones() {
    const leftZonesContainer = document.getElementById('leftZones');
    const rightZonesContainer = document.getElementById('rightZones');
    for (let i = 1; i <= 16; i++) {
      const zone = {
        id: i,
        activated: false,
        selectedDevice: null,
        buzzerStatus: 'off'
      };
      zones.push(zone);

      const zoneDiv = document.createElement('div');
      zoneDiv.className = 'zone';
      zoneDiv.id = `zone-${i}`;
      zoneDiv.innerHTML = `
        <label for="zone-${i}-select">Zone ${i}</label>
        <div class="toggle-switch-container">
          <div class="toggle-switch">
            <label class="toggle-slider">
              <input type="checkbox" onchange="toggleZone(${i})">
              <span class="slider"></span>
            </label>
          </div>
          <select id="zone-${i}-select" onchange="handleDeviceChange(${i})" disabled>
            <option value="" selected disabled>Select Device</option>
            ${devices.map(device => `<option value="${device}">${device.toUpperCase()}</option>`).join('')}
          </select>
        </div>
        <div class="buzzer-switch-container">
          <div class="buzzer-switch">
            <input type="checkbox" id="zone-${i}-buzzer-switch" onchange="toggleBuzzer(${i})" disabled>
            <label for="zone-${i}-buzzer-switch">Buzzer: Off</label>
          </div>
        </div>
        <button id="zone-${i}-buzzer-btn" style="display: none;"></button>
      `;
      if (i <= 8) {
        leftZonesContainer.appendChild(zoneDiv);
      } else {
        rightZonesContainer.appendChild(zoneDiv);
      }
    }
  }

  function toggleZone(zoneId) {
    const zone = zones.find(z => z.id === zoneId);
    zone.activated = !zone.activated;
    const selectElement = document.getElementById(`zone-${zoneId}-select`);
    const buzzerSwitch = document.getElementById(`zone-${zoneId}-buzzer-switch`);

    selectElement.disabled = !zone.activated;
    buzzerSwitch.disabled = !zone.activated;

    if (zone.activated) {
      selectElement.removeAttribute('disabled');
      if (zone.selectedDevice) {
        buzzerSwitch.removeAttribute('disabled');
      }
    } else {
      selectElement.disabled = true;
      buzzerSwitch.disabled = true;
    }
  }

  function toggleBuzzer(zoneId) {
    const zone
    = zones.find(z => z.id === zoneId);
    const buzzerSwitch = document.getElementById(`zone-${zoneId}-buzzer-switch`);

    if (zone.selectedDevice) {
      zone.buzzerStatus = buzzerSwitch.checked ? 'on' : 'off';
      const buzzerLabel = document.querySelector(`#zone-${zoneId}-buzzer-switch + label`);
      buzzerLabel.textContent = `Buzzer: ${zone.buzzerStatus.charAt(0).toUpperCase() + zone.buzzerStatus.slice(1)}`;
    } else {
      // Disable buzzer switch if no device is selected
      buzzerSwitch.checked = false;
      buzzerSwitch.disabled = true;
    }
  }

  function handleDeviceChange(zoneId) {
    const zone = zones.find(z => z.id === zoneId);
    const selectElement = document.getElementById(`zone-${zoneId}-select`);
    zone.selectedDevice = selectElement.value;
    const buzzerSwitch = document.getElementById(`zone-${zoneId}-buzzer-switch`);

    // Enable buzzer switch if a device is selected
    if (zone.selectedDevice) {
      buzzerSwitch.disabled = false;
    } else {
      // Disable buzzer switch if no device is selected
      buzzerSwitch.checked = false;
      buzzerSwitch.disabled = true;
    }
  }

  window.onload = initializeZones;
</script>

</body>
</html>
